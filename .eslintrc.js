module.exports = {
  root: true,
  parserOptions: {
    parser: 'babel-eslint',
    sourceType: 'module',
  },
  env: {
    browser: true,
    node: true,
    es6: true,
  },
  extends: [
    'plugin:vue/recommended',
    'eslint:recommended',
    'plugin:vuetify/base',
  ],
  // add your custom rules here
  // it is base on https://github.com/vuejs/eslint-config-vue
  rules: {
    'vue/max-attributes-per-line': ['error', {
      'singleline': {
        'max': 1,
      },
      'multiline': {
        'max': 1,
      },
    }],
    'accessor-pairs': ['error'],
    'arrow-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    'block-spacing': ['error', 'always'],
    'brace-style': [
      'error',
      '1tbs',
      {
        allowSingleLine: true,
      },
    ],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': [
      'error',
      {
        before: false,
        after: true,
      },
    ],
    'comma-style': ['error', 'last'],
    'constructor-super': ['error'],
    curly: ['error', 'multi-line'],
    'dot-location': ['error', 'property'],
    'eol-last': ['error'],
    eqeqeq: ['error', 'allow-null'],
    'generator-star-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    'handle-callback-err': ['error', '^(err|error)$'],
    'jsx-quotes': ['error', 'prefer-single'],
    'key-spacing': [
      'error',
      {
        beforeColon: false,
        afterColon: true,
      },
    ],
    'keyword-spacing': [
      'error',
      {
        before: true,
        after: true,
      },
    ],
    'new-cap': [
      'error',
      {
        newIsCap: true,
        capIsNew: false,
      },
    ],
    'new-parens': ['error'],
    'no-array-constructor': ['error'],
    'no-caller': ['error'],
    'no-console': 'off',
    'no-class-assign': ['error'],
    'no-cond-assign': ['error'],
    'no-const-assign': ['error'],
    'no-control-regex': ['error'],
    'no-delete-var': ['error'],
    'no-dupe-args': ['error'],
    'no-dupe-class-members': ['error'],
    'no-dupe-keys': ['error'],
    'no-duplicate-case': ['error'],
    'no-empty-character-class': ['error'],
    'no-empty-pattern': ['error'],
    'no-eval': ['error'],
    'no-ex-assign': ['error'],
    'no-extend-native': ['error'],
    'no-extra-bind': ['error'],
    'no-extra-boolean-cast': ['error'],
    'no-extra-parens': ['error', 'functions'],
    'no-fallthrough': ['error'],
    'no-floating-decimal': ['error'],
    'no-func-assign': ['error'],
    'no-implied-eval': ['error'],
    'no-inner-declarations': ['error', 'functions'],
    'no-invalid-regexp': ['error'],
    'no-irregular-whitespace': ['error'],
    'no-iterator': ['error'],
    'no-label-var': ['error'],
    'no-labels': [
      'error',
      {
        allowLoop: false,
        allowSwitch: false,
      },
    ],
    'no-lone-blocks': ['error'],
    'no-mixed-spaces-and-tabs': ['error'],
    'no-multi-spaces': ['error'],
    'no-multi-str': ['error'],
    'no-multiple-empty-lines': [
      'error',
      {
        max: 1,
      },
    ],
    'no-native-reassign': ['error'],
    'no-negated-in-lhs': ['error'],
    'no-new-object': ['error'],
    'no-new-require': ['error'],
    'no-new-symbol': ['error'],
    'no-new-wrappers': ['error'],
    'no-obj-calls': ['error'],
    'no-octal': ['error'],
    'no-octal-escape': ['error'],
    'no-path-concat': ['error'],
    'no-proto': ['error'],
    'no-redeclare': ['error'],
    'no-regex-spaces': ['error'],
    'no-return-assign': ['error', 'except-parens'],
    'no-self-assign': ['error'],
    'no-self-compare': ['error'],
    'no-sequences': ['error'],
    'no-shadow-restricted-names': ['error'],
    'no-spaced-func': ['error'],
    'no-sparse-arrays': ['error'],
    'no-this-before-super': ['error'],
    'no-throw-literal': ['error'],
    'no-trailing-spaces': ['error'],
    'no-undef': ['error'],
    'no-undef-init': ['error'],
    'no-unexpected-multiline': ['error'],
    'no-unmodified-loop-condition': ['error'],
    'no-unneeded-ternary': [
      'error',
      {
        defaultAssignment: false,
      },
    ],
    'no-unreachable': ['error'],
    'no-unsafe-finally': ['error'],
    'no-useless-call': ['error'],
    'no-useless-computed-key': ['error'],
    'no-useless-constructor': ['error'],
    'no-useless-escape': ['off'],
    'no-whitespace-before-property': ['error'],
    'no-with': ['error'],
    'one-var': [
      'error',
      {
        initialized: 'never',
      },
    ],
    'operator-linebreak': [
      'error',
      'after',
      {
        overrides: {
          '?': 'before',
          ':': 'before',
        },
      },
    ],
    'padded-blocks': ['error', 'never'],
    'space-before-blocks': ['error', 'always'],
    'space-before-function-paren': ['off', 'never'],
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': ['error'],
    'space-unary-ops': [
      'error',
      {
        words: true,
        nonwords: false,
      },
    ],
    'spaced-comment': [
      'error',
      'always',
      {
        markers: [
          'global',
          'globals',
          'eslint',
          'eslint-disable',
          '*package',
          '!',
          ',',
        ],
      },
    ],
    'template-curly-spacing': ['error', 'never'],
    'use-isnan': ['error'],
    'valid-typeof': ['error'],
    'wrap-iife': ['error', 'any'],
    'yield-star-spacing': ['error', 'both'],
    yoda: ['error', 'never'],
    'prefer-const': ['error'],
    'array-bracket-spacing': ['error', 'never'],
    'vue/no-unused-vars': ['error'],
    'vue/no-unused-components': ['error'],
    'vue/no-useless-template-attributes': ['error'],
    'linebreak-style': ['off', 'error', 'windows'],
    'vue/html-closing-bracket-newline': [
      'error',
      {
        singleline: 'never',
        multiline: 'always',
      },
    ],
    'vue/no-v-html': ['off'],
    'vue/singleline-html-element-content-newline': 'off',
    'no-shadow': ['off'],
    'vue/script-setup-uses-vars': ['off'],
    'vue/multi-word-component-names': ['off'],
    'vue/no-unused-refs': ['error'],
    'vue/valid-v-slot': ['error'],
    'vue/no-unused-properties': ['error', {
      'groups': ['props', 'data', 'computed', 'setup', 'methods'],
      'deepData': false,
      'ignorePublicMembers': false,
    }],
    'vue/component-name-in-template-casing': ['error', 'PascalCase', {
      'registeredComponentsOnly': true,
      'ignores': [],
    }],
    'vue/custom-event-name-casing': ['error',
      'camelCase',
      {
        'ignores': [],
      },
    ],
    'vue/require-name-property': ['error'],
    'vue/component-definition-name-casing': ['error', 'PascalCase'],
    'vue/prop-name-casing': ['error', 'camelCase'],
    'vue/component-options-name-casing': ['error', 'PascalCase'],
    'vue/no-use-computed-property-like-method': ['error'],
    'vue/v-on-function-call': ['error'],
    'vue/require-default-prop': ['error'],
    'vue/v-slot-style': ['error', {
      'atComponent': 'shorthand',
      'default': 'shorthand',
      'named': 'shorthand',
    }],
    'vue/no-template-shadow': ['off'],
    'vue/require-prop-types': ['error'],
    'vue/html-self-closing': ['error', {
      'html': {
        'void': 'always',
        'normal': 'always',
        'component': 'always',
      },
      'svg': 'always',
      'math': 'always',
    }],
    'vue/no-spaces-around-equal-signs-in-attribute': ['error'],
    'vue/no-v-model-argument': ['error'],
    'vue/valid-v-bind-sync': ['error'],
    'vue/no-mutating-props': ['error'],
    'vue/no-parsing-error': ['error', {
      'abrupt-closing-of-empty-comment': true,
      'absence-of-digits-in-numeric-character-reference': true,
      'cdata-in-html-content': true,
      'character-reference-outside-unicode-range': true,
      'control-character-in-input-stream': true,
      'control-character-reference': true,
      'eof-before-tag-name': true,
      'eof-in-cdata': true,
      'eof-in-comment': true,
      'eof-in-tag': true,
      'incorrectly-closed-comment': true,
      'incorrectly-opened-comment': true,
      'invalid-first-character-of-tag-name': true,
      'missing-attribute-value': true,
      'missing-end-tag-name': true,
      'missing-semicolon-after-character-reference': true,
      'missing-whitespace-between-attributes': true,
      'nested-comment': true,
      'noncharacter-character-reference': true,
      'noncharacter-in-input-stream': true,
      'null-character-reference': true,
      'surrogate-character-reference': true,
      'surrogate-in-input-stream': true,
      'unexpected-character-in-attribute-name': true,
      'unexpected-character-in-unquoted-attribute-value': true,
      'unexpected-equals-sign-before-attribute-name': true,
      'unexpected-null-character': true,
      'unexpected-question-mark-instead-of-tag-name': true,
      'unexpected-solidus-in-tag': true,
      'unknown-named-character-reference': true,
      'end-tag-with-attributes': true,
      'duplicate-attribute': true,
      'end-tag-with-trailing-solidus': true,
      'non-void-html-element-start-tag-with-trailing-solidus': false,
      'x-invalid-end-tag': true,
      'x-invalid-namespace': true,
    }],
    'vue/no-async-in-computed-properties': ['error'],
    'vue/no-computed-properties-in-data': ['error'],
    'vue/no-reserved-keys': ['error', {
      'reserved': [],
      'groups': [],
    }],
    'vue/no-reserved-props': ['error', {
      'vueVersion': 2,
    }],
    'vue/no-side-effects-in-computed-properties': ['error'],
    'vue/require-prop-type-constructor': ['error'],
    'vue/require-valid-default-prop': ['error'],
    'vue/camelcase': ['error', {
      'properties': 'always',
      'ignoreDestructuring': true,
      'ignoreGlobals': true,
      'ignoreImports': true,
      'allow': ['\w*_\w*'],
    }],
    'vue/max-len': ['error', {
      'code': 120,
      'template': 120,
      'tabWidth': 2,
      'comments': 80,
      'ignorePattern': '^`.*`$',
      'ignoreComments': true,
      'ignoreTrailingComments': true,
      'ignoreUrls': true,
      'ignoreStrings': true,
      'ignoreTemplateLiterals': true,
      'ignoreRegExpLiterals': true,
      'ignoreHTMLAttributeValues': true,
      'ignoreHTMLTextContents': true,
    }],
  },
}
